<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="C++" filename="C:\Users\olant\runtime-de.tu_bs.cs.isf.e4cf.core.product\ 01 RAW\Other\source-SPARE-Time-Variants\PMKMP.cpp"><function_decl><type><name>char</name></type> <name>alphabetNormalize</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>char</name></type> <name>a</name></decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><name>char</name></type> <name>alphabetDenormalize</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>char</name></type> <name>a</name></decl></parameter> )</parameter_list>;</function_decl>
<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>ALPHABETSIZE</name> <init>= <expr><operator>(</operator><name>CHAR_MAX</name><operator>)</operator></expr></init></decl>;</decl_stmt>
<typedef>typedef <type><name><name>std</name><operator>::</operator><name>string</name></name></type> <name>String</name>;</typedef>
<class>class <name>PMSingle</name> <block>{<private type="default">
</private><public>public:
<function_decl><type><specifier>virtual</specifier> <name>void</name></type> <name>match</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>String</name><modifier>&amp;</modifier></type> <name>S</name></decl></parameter>, <parameter><function_decl><type><name>bool</name></type> <name>callBack</name> <parameter_list>(<parameter><decl><type><name>int</name></type></decl></parameter>)</parameter_list></function_decl></parameter> )</parameter_list> = <literal type="number">0</literal>;</function_decl>
</public>}</block>;</class>
<class>class <name>FailIdx</name> <block>{<private type="default">
</private><public>public:
<constructor_decl><name>FailIdx</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>String</name><modifier>&amp;</modifier></type> <name>kw</name></decl></parameter> )</parameter_list>;</constructor_decl>
<constructor_decl><name>FailIdx</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>FailIdx</name><modifier>&amp;</modifier></type> <name>f</name></decl></parameter> )</parameter_list>;</constructor_decl>
<function_decl type="operator"><type><name>int</name></type> <name>operator<name>[]</name></name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>int</name></type> <name>i</name></decl></parameter> )</parameter_list> <specifier>const</specifier>;</function_decl>
<function_decl><type><name>bool</name></type> <name>c_inv</name><parameter_list>()</parameter_list> <specifier>const</specifier>;</function_decl>
<friend>friend <function_decl type="operator"><type><name><name>std</name><operator>::</operator><name>ostream</name></name><modifier>&amp;</modifier></type> <name>operator<name>&lt;&lt;</name></name><parameter_list>( <parameter><decl><type><name><name>std</name><operator>::</operator><name>ostream</name></name><modifier>&amp;</modifier></type> <name>os</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>FailIdx</name><modifier>&amp;</modifier></type> <name>t</name></decl></parameter>
)</parameter_list>;</function_decl></friend>
</public><private>private:
<decl_stmt><decl><type><name><name>std</name><operator>::</operator><name>vector</name><argument_list type="generic">&lt;<argument><expr><name>int</name></expr></argument>&gt;</argument_list></name></type> <name>rep</name></decl>;</decl_stmt>
</private>}</block>;</class>
<class>class <name>PMKMP</name> <super_list>: <super><specifier>public</specifier> <name>PMSingle</name></super></super_list> <block>{<private type="default">
</private><public>public:
<constructor_decl><name>PMKMP</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>String</name><modifier>&amp;</modifier></type> <name>kw</name></decl></parameter> )</parameter_list>;</constructor_decl>
<constructor_decl><name>PMKMP</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>PMKMP</name><modifier>&amp;</modifier></type> <name>r</name></decl></parameter> )</parameter_list>;</constructor_decl>
<function_decl><type><specifier>virtual</specifier> <name>void</name></type> <name>match</name><parameter_list>( <parameter><decl><type><specifier>const</specifier> <name>String</name><modifier>&amp;</modifier></type> <name>S</name></decl></parameter>, <parameter><function_decl><type><name>bool</name></type> <name>callBack</name> <parameter_list>(<parameter><decl><type><name>int</name></type></decl></parameter>)</parameter_list></function_decl></parameter> )</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> <name>c_inv</name><parameter_list>()</parameter_list> <specifier>const</specifier>;</function_decl>
<friend>friend <function_decl type="operator"><type><name><name>std</name><operator>::</operator><name>ostream</name></name><modifier>&amp;</modifier></type> <name>operator<name>&lt;&lt;</name></name><parameter_list>( <parameter><decl><type><name><name>std</name><operator>::</operator><name>ostream</name></name><modifier>&amp;</modifier></type> <name>os</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>PMKMP</name><modifier>&amp;</modifier></type> <name>t</name></decl></parameter> )</parameter_list>;</function_decl></friend>
</public><private>private:
<decl_stmt><decl><type><name>String</name></type> <name>keyword</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>FailIdx</name></type> <name>ff</name></decl>;</decl_stmt>
</private>}</block>;</class></unit>
